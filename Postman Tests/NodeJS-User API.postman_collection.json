{
	"info": {
		"_postman_id": "6aece290-5d5d-4fca-bf19-0240611a07b9",
		"name": "NodeJS-User API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33511578"
	},
	"item": [
		{
			"name": "GET User API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get All Users\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.json;\r",
							"\r",
							"    const responseBody = pm.response.json();\r",
							"    pm.expect(responseBody).to.be.an(\"array\").and.not.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST User API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" // Test for status code 201\r",
							"    pm.test(\"Status code is 201\", function () {\r",
							"        pm.response.to.have.status(201);\r",
							"    });\r",
							"    \r",
							"    // Test for response type JSON\r",
							"    pm.test(\"Response is of type JSON\", function () {\r",
							"        pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"    });\r",
							"    \r",
							"    // Test for response body\r",
							"    pm.test(\"Response body contains created user data\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData).to.be.an(\"object\");\r",
							"        pm.expect(jsonData).to.have.property(\"email\", \"123456usesecondnique@example.com\");\r",
							"        pm.expect(jsonData).to.have.property(\"username\", \"unique_user2\");\r",
							"        pm.expect(jsonData).to.have.property(\"shippingAddress\", \"1231 Unique Street\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"123456usesecondnique@example.com\",\r\n    \"password\": \"secondpassword123\",\r\n    \"username\": \"unique_user2\",\r\n    \"shippingAddress\": \"1231 Unique Street\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT User API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test for response type JSON\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"// Test for response data\r",
							"pm.test(\"Response should contain updated user data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\").that.has.property(\"_id\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"usecondnique121@example.com\",\r\n    \"password\": \"3secondpassword123\",\r\n    \"username\": \"unique_user27\",\r\n    \"shippingAddress\": \"12312 Unique Street\",\r\n    \"purchaseHistory\": []\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/users/660ebada5d70dacd94d2766e",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"users",
						"660ebada5d70dacd94d2766e"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE User API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test for status code 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test for response type JSON\r",
							"pm.test(\"Response is of type JSON\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"\r",
							"// Test for response structure and content\r",
							"pm.test(\"Response should contain deleted user details\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/users/660ebb365d70dacd94d27674",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"users",
						"660ebb365d70dacd94d27674"
					]
				}
			},
			"response": []
		}
	]
}